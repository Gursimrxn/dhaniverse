@font-face {
  font-family: 'Pixeloid';
  src: url('/fonts/PixeloidSansBold.ttf') format('truetype');
}

.pixeloid {
  font-family: 'Pixeloid', sans-serif;
  font-smooth: never;
  -webkit-font-smoothing: none;
}

.landing-page {
  min-height: 100vh;
  width: 100%;
  display: flex;
  flex-direction: column;
  background: linear-gradient(135deg, #152238 0%, #1f3a5f 100%);
  color: #fff;
  position: relative;
  z-index: 10;
}

.landing-header {
  padding: 2rem 0;
  text-align: center;
}

.landing-header h1 {
  font-size: 4rem;
  margin: 0;
  color: #ffcc00;
  text-shadow: 0 0 10px rgba(255, 204, 0, 0.7);
  letter-spacing: 4px;
}

.tagline {
  font-size: 1.2rem;
  margin-top: 0.5rem;
  color: #aaddff;
}

.landing-content {
  display: flex;
  flex: 1;
  justify-content: center;
  align-items: center;
  padding: 2rem;
  pointer-events: auto;  /* Ensure pointer events work */
}

.welcome-container {
  display: flex;
  flex-direction: row;
  max-width: 1200px;
  gap: 2rem;
  background: rgba(0, 0, 0, 0.5);
  border-radius: 15px;
  padding: 2rem;
  box-shadow: 0 0 20px rgba(0, 0, 0, 0.5);
}

@media (max-width: 768px) {
  .welcome-container {
    flex-direction: column;
  }
}

.description {
  flex: 1;
}

.description h2 {
  font-size: 2rem;
  margin-bottom: 1rem;
  color: #aaddff;
}

.description p {
  font-size: 1.1rem;
  line-height: 1.6;
  margin-bottom: 1.5rem;
}

.features {
  list-style-type: none;
  padding: 0;
  margin-bottom: 2rem;
}

.features li {
  margin-bottom: 0.8rem;
  font-size: 1.1rem;
  display: flex;
  align-items: center;
}

.features li::before {
  content: "â–¶";
  color: #ffcc00;
  margin-right: 0.5rem;
}

.play-button {
  background: #ffcc00;
  color: #152238;
  border: none;
  padding: 0.8rem 2rem;
  font-size: 1.2rem;
  border-radius: 5px;
  cursor: pointer;
  transition: all 0.3s;
}

.play-button:hover {
  background: #ffdd33;
  transform: translateY(-2px);
  box-shadow: 0 5px 15px rgba(255, 204, 0, 0.4);
}

.screenshot-container {
  flex: 1;
  display: flex;
  justify-content: center;
  align-items: center;
}

.game-preview {
  width: 100%;
  aspect-ratio: 16/9;
  background: rgba(0, 0, 0, 0.3);
  border-radius: 10px;
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 1.5rem;
  color: #aaa;
  border: 2px solid #444;
}

/* Remove the fixed positioning that's conflicting with the new layout */
/* .landing-container {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: url('/UI/joingingscreen.jpg') no-repeat center center / cover ;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  z-index: 1000;
} */

.join-container {
  background: rgba(0, 0, 0, 0.7);
  padding: 2rem;
  border-radius: 10px;
  text-align: center;
  min-width: 320px;
  box-shadow: 0 0 30px rgba(0, 0, 0, 0.7);
}

.join-container h2 {
  margin-top: 0;
  margin-bottom: 1.5rem;
  color: #ffcc00;
  font-size: 2rem;
}

.join-container input {
  width: 100%;
  padding: 0.8rem;
  margin-bottom: 1rem;
  background: rgba(255, 255, 255, 0.1);
  border: 2px solid #5599cc;
  color: #fff;
  font-size: 1rem;
  border-radius: 5px;
  outline: none;
  transition: border-color 0.3s;
}

.join-container input:focus {
  border-color: #ffcc00;
}

.join-container input::placeholder {
  color: #888;
}

.error-message {
  color: #ff6b6b;
  margin-bottom: 1rem;
  font-size: 0.9rem;
}

.button-group {
  display: flex;
  gap: 1rem;
}

.back-button,
.join-button {
  flex: 1;
  padding: 0.8rem;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  font-size: 1rem;
  transition: all 0.3s;
}

.back-button {
  background: rgba(255, 255, 255, 0.2);
  color: #fff;
}

.back-button:hover {
  background: rgba(255, 255, 255, 0.3);
}

.join-button {
  background: #ffcc00;
  color: #152238;
}

.join-button:hover {
  background: #ffdd33;
  transform: translateY(-2px);
  box-shadow: 0 5px 15px rgba(255, 204, 0, 0.4);
}

.landing-footer {
  text-align: center;
  padding: 1.5rem;
  background: rgba(0, 0, 0, 0.5);
  color: #999;
  font-size: 0.9rem;
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(-10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}